swagger: '2.0'
info:
  version: '1.0.0'
  title: Domino foodie list
  description: A sample API for Connect 2017
  termsOfService: https://notessensei.com/
  contact:
    name: The NotesSensei
    email: stephan@wissel.net
    url: https://notessensei.com/
  license:
    name: Apache-2.0
    url: https://opensource.org/licenses/Apache-2.0
host: food.projectcastle.io
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /food:
    get:
      description: Returns the list of all food items
      operationId: findFood
      produces:
        - application/json
      parameters:
        - name: type
          in: query
          description: filter the food type
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: rows
          in: query
          description: maximum number of rows to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: food response
          schema:
            type: array
            items:
              $ref: '#/definitions/food'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      description: Creates a new food item.  Duplicates are allowed
      operationId: addFood
      produces:
        - application/json
      parameters:
        - name: food
          in: body
          description: Food to add to the store
          required: true
          schema:
            $ref: '#/definitions/food'
      responses:
        '200':
          description: food response
          schema:
            $ref: '#/definitions/food'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /food/{id}:
    get:
      description: Returns a food item based on a single ID
      operationId: findFoodById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of food to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: food response
          schema:
            $ref: '#/definitions/food'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: deletes a single food item based on the ID supplied
      operationId: deleteFood
      parameters:
        - name: id
          in: path
          description: ID of food to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: food deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /cook:
    get:
      description: Returns the list of all cooks
      operationId: findCook
      produces:
        - application/json
      parameters:
        - name: type
          in: query
          description: filter the cooks
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: rows
          in: query
          description: maximum number of rows to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: cook response
          schema:
            type: array
            items:
              $ref: '#/definitions/cook'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'

definitions:
  food:
    type: object
    required:
      - name
    properties:
      unid:
        type: string
      name:
        type: string
      taste:
        type: string
      color:
        type: string
      shape:
        type: string
      type:
        type: string         
  cook:
    type: object
    required:
      - name
    properties:
      unid:
        type: string     
      name:
        type: string
      specialty:
        type: string
  errorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
